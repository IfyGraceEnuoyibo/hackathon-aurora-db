name: Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev or prod)"
        required: true
        default: "dev"   

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: terraform init

      # Terraform Validate
      - name: Terraform Validate
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: terraform validate

      # Terraform Plan
      - name: Terraform Plan
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: terraform plan -var-file="environments/${{ github.event.inputs.environment }}.tfvars"

      # Terraform Apply
      - name: Terraform Apply
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
        run: terraform apply -var-file="environments/${{ github.event.inputs.environment }}.tfvars" -auto-approve

      # Run Schema Initialization
      - name: Initialize Schema
        run: |
          ./schemas/init_schema.sh

      # Test Database
      - name: Test Database Connectivity and Schema
        run: |
          ./test/test_connectivity.sh
          ./test/test_data_integrity.sh
